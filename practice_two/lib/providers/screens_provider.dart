import 'package:flutter/material.dart';
import 'package:flutter_riverpod/flutter_riverpod.dart';
import 'package:practice_two/model/data.dart';
import 'package:practice_two/screen/favourites.dart';
import 'package:practice_two/services/http_get.dart';

final dataprovider =
    StateNotifierProvider<Photoprovider, Photo>((ref) => Photoprovider());

abstract class Photo {}

class initialstate extends Photo {}

class loadingstate extends Photo {}

class loadedstate extends Photo {
  final List<Autogenerated> photos;
  loadedstate({required this.photos});
}

class errorstate extends Photo {
  errorstate({required this.message});
  final String message;
}

class Photoprovider extends StateNotifier<Photo> {
  Photoprovider() : super(loadingstate());

  final httpRequest _httprequest = httpRequest();

  void fetchphotos() async {
    try {
      List<Autogenerated> photos = await _httprequest.getpost();
      state = loadedstate(photos: photos);
    } catch (e) {
      state = errorstate(message: e.toString());
    }
    print('expention');
  }
}
