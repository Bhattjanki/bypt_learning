import 'package:flutter/material.dart';
import 'package:flutter_riverpod/flutter_riverpod.dart';
import 'package:practice_two/model/data.dart';
import 'package:practice_two/providers/screens_provider.dart';


final dataprovider =
    StateNotifierProvider<Photoprovider, Photo>((ref) => Photoprovider());

final likedIteamprovider = StateProvider<List<Autogenerated>>((ref) => []);

class Home_Screen extends ConsumerWidget {
  Home_Screen({Key? key}) : super(key: key);

  bool _isInitialized = false;

  @override
  Widget build(BuildContext context, WidgetRef ref) {
    if (!_isInitialized) {
      ref.read(dataprovider.notifier).fetchphotos();
      _isInitialized = true;
    }
    bool islike = false;
    return Center(
      child: Consumer(
        builder: (context, ref, child) {
          Photo state = ref.watch(dataprovider);
          if (state is loadingstate)
            return Center(
              child: CircularProgressIndicator(),
            );
          if (state is errorstate)
            return Center(
              child: Text(state.message),
            );
          if (state is loadedstate) {
            return ListView.builder(
              itemCount: state.photos.length,
              itemBuilder: (context, index) {
                Autogenerated photo = state.photos[index];

                return Padding(
                  padding: const EdgeInsets.all(8.0),
                  child: ListTile(
                    minVerticalPadding: 10,
                    leading: CircleAvatar(
                      child: Image(image: NetworkImage(photo.url.toString())),
                    ),
                    title: Text(photo.title.toString()),
                    trailing: IconButton(
                      onPressed: () {
                        if (islike == true) {
                          ref
                              .watch(likedIteamprovider.notifier)
                              .state
                              .add(photo);
                        } else {
                          ref
                              .watch(likedIteamprovider.notifier)
                              .state
                              .remove(photo);
                        }
                        
                      },
                      icon: Icon(
                        islike ? Icons.favorite : Icons.favorite_border,
                        size: 20,
                      ),
                    ),
                  ),
                );
              },
            );
          }
          return Text('nothing');
        },
      ),
    );
  }
}
